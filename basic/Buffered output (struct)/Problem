Buffered output
Time limit	1 second
Memory limit	64Mb
Input	standard input or input.txt
Output	standard output or output.txt
You have been given the Writer class, which can write data on the screen, in a file or in memory - in general, it doesn't matter where. 
This class has a virtual function write, which accepts a pointer to the input bytes of memory and their number. 
The function tries to write these bytes to the right place. This class looks like this: https://gist.github.com/pumpkin-code/85945db45fdedbfd36970ea89460499a.

However, the output operation has overhead, and frequent write calls with small data sizes can slow down the program. 
You need to write inherited class BufferedWriter that would perform buffered output. The constructor of this class must take a parameter of type size_t - the size of the buffer. 
Overriden write function must first write to the internal buffer, and only when it is full, call write of the base class with the data of this buffer. 
At the end of the usage of the class, the remaining data in the buffer must also be written through the call to the base class's write function. 
The maximum possible buffer size should not be changed during the work.

Notes
Start your program with #include "writer.h" - this directive will connect our version of the base class Writer. Next, write only the code of the successor class, BufferedWriter.
